{"version":3,"sources":["./src/app/core/interceptors/auth-header/auth-header.interceptor.ts","./src/app/core/components/login-form/login-form.component.ts","./src/app/core/components/login-form/login-form.component.html","./src/app/core/services/auth/auth.constants.ts","ws (ignored)","./src/app/core/services/logger/logger.service.ts","./src/app/core/services/error-handler/handlers/component-error-handler.ts","./src/app/core/services/error-handler/error-handler-factory.constants.ts","./src/app/core/interceptors/interceptors.module.ts","./src/app/core/components/room-config-form/room-config-form.component.ts","./src/app/core/components/room-config-form/room-config-form.component.html","./src/app/core/services/user/user.service.ts","./src/app/shared/pipes/pipes.module.ts","./src/environments/environment.ts","./src/app/core/services/error-handler/error-handler-factory.service.ts","./src/app/core/services/error-handler/handlers/connection-error-handler.ts","./src/app/core/components/user-management-table/user-management-table.component.ts","./src/app/core/components/user-management-table/user-management-table.component.html","./src/app/core/services/error-handler/handlers/default-error-handler.ts","./src/app/core/layout/admin/admin.component.ts","./src/app/core/layout/admin/admin.component.html","./src/app/core/services/error-handler/error-handler.service.ts","./src/app/core/layout/admin-top-menu/admin-top-menu.component.ts","./src/app/core/layout/admin-top-menu/admin-top-menu.component.html","./src/app/shared/shared.module.ts","./src/app/core/components/user-management-table/user-management-table.constants.ts","./src/app/core/services/auth/auth.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/layout/admin-side-menu/admin-side-menu.constants.ts","./src/app/shared/components/components.module.ts","./src/app/core/layout/admin-content/admin-content.component.ts","./src/app/core/layout/admin-content/admin-content.component.html","./src/app/shared/events/events.module.ts","./src/app/shared/services/services.module.ts","./src/app/app.module.ts","./src/app/core/interceptors/auth-header/auth-header.constants.ts","./src/app/pages/pages.module.ts","./src/app/core/components/login-form/login-form.constants.ts","./src/app/core/guards/back-office.guard.ts","./src/app/core/layout/admin-footer/admin-footer.component.ts","./src/app/core/layout/admin-footer/admin-footer.component.html","./src/app/core/components/room-config-form/room-config-form.constants.ts","./src/app/core/layout/layout.module.ts","./src/app/core/core.module.ts","./src/app/core/components/components.module.ts","./src/app/app-routing.module.ts","./src/app/pages/pages-routing.module.ts","./src/app/core/services/user/user.constants.ts","./src/app/core/layout/admin-side-menu/admin-side-menu.component.ts","./src/app/core/layout/admin-side-menu/admin-side-menu.component.html","./src/app/core/guards/guards.module.ts","./src/app/shared/directives/directives.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { AuthHeaderConstants } from './auth-header.constants';\n\n@Injectable()\nexport class AuthHeaderInterceptor implements HttpInterceptor {\n\n  constructor(public authService: AuthService) {\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token: string | null = this.authService.getCredentials().accessToken;\n\n    if (!token) {\n      return next.handle(request);\n    }\n\n    const requestWithHeaders = request.clone({\n      headers: request.headers.set(\n        AuthHeaderConstants.HEADERS.AUTHORIZATION,\n        `${environment.token_prefix}${token}`\n      ),\n    });\n\n    return next.handle(requestWithHeaders);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { LoginToken } from '../../../shared/models/login-token';\nimport { Message } from 'primeng/api/message';\nimport { MessageService } from 'primeng/api';\nimport { LoginFormConstants } from './login-form.constants';\nimport { StatusCodes } from 'http-status-codes';\n\n@Component({\n  selector: 'back-office-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  providers: [MessageService]\n})\nexport class LoginFormComponent implements OnInit {\n  public loginFormGroup: FormGroup;\n  public messages: Message[];\n  public showPassword = false;\n  public formSubmitted = false;\n  public loginButtonDisabled = false;\n  public loginButtonIcon = '';\n  public loginFormConstants = LoginFormConstants;\n\n  constructor(\n    public authService: AuthService,\n    public router: Router,\n    private fb: FormBuilder,\n    public messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginFormGroup = this.fb.group({\n      username: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Toggle password visibility\n   */\n  togglePassword(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  /**\n   * Submit the login form\n   */\n  submitLogin(): void {\n    this.formSubmitted = true;\n    this.messageService.clear();\n    const self: LoginFormComponent = this;\n\n    if (this.loginFormGroup.valid) {\n      this.loginButtonDisabled = true;\n      this.loginButtonIcon = 'pi pi-spin pi-spinner';\n      this.authService.signIn(this.loginFormGroup.value).subscribe({\n        next(data: LoginToken): void {\n          self.authService.storeCredential(data);\n          self.router.navigateByUrl('/overview');\n        },\n        error(err: HttpErrorResponse): void {\n          self.messageService.add({\n            severity: 'error',\n            detail:\n              err.status === StatusCodes.BAD_REQUEST\n                ? LoginFormConstants.ERRORS.INVALID_CREDENTIALS\n                : LoginFormConstants.ERRORS.SERVER\n          });\n          self.loginButtonDisabled = false;\n          self.loginButtonIcon = '';\n        }\n      });\n    }\n  }\n}\n","<p-card id=\"login-card\" styleClass=\"login-card\">\n  <div class=\"p-col-12\">\n    <h2 id=\"back-office-title\">{{ loginFormConstants.LABELS.BACKOFFICE }}</h2>\n  </div>\n  <form\n    #loginForm=\"ngForm\"\n    (ngSubmit)=\"submitLogin()\"\n    [formGroup]=\"loginFormGroup\"\n    id=\"login-form\"\n    novalidate\n  >\n    <div class=\"p-col-12\">\n      <p-messages [(value)]=\"messages\"></p-messages>\n      <div class=\"p-fluid p-formgrid p-grid\">\n        <div class=\"p-field p-col-12\">\n          <input\n            class=\"input-padding\"\n            formControlName=\"username\"\n            id=\"username\"\n            pInputText\n            type=\"text\"\n            placeholder=\"{{ loginFormConstants.LABELS.USERNAME }}\" />\n          <small\n            *ngIf=\"\n              formSubmitted &&\n              loginFormGroup.controls.username.hasError('required')\n            \"\n            class=\"p-invalid\">\n            {{ loginFormConstants.ERRORS.USERNAME_REQUIRED }}\n          </small>\n          <small\n            *ngIf=\"\n              formSubmitted &&\n              loginFormGroup.controls.username.hasError('email')\n            \"\n            class=\"p-invalid\">\n            {{ loginFormConstants.ERRORS.USERNAME_EMAIL }}\n          </small>\n        </div>\n        <div class=\"p-field p-col-12\">\n          <label for=\"password\"></label>\n          <span class=\"p-input-icon-right\">\n            <i\n              (click)=\"togglePassword()\"\n              [class]=\"\n                showPassword\n                  ? 'pi pi-eye-slash hover-pointer'\n                  : 'pi pi-eye hover-pointer'\n              \">\n            </i>\n            <input\n              [type]=\"showPassword ? 'text' : 'password'\"\n              class=\"input-padding\"\n              formControlName=\"password\"\n              id=\"password\"\n              placeholder=\"{{ loginFormConstants.LABELS.PASSWORD }}\"\n              pInputText />\n          </span>\n          <small\n            *ngIf=\"\n              formSubmitted &&\n              loginFormGroup.controls.password.hasError('required')\n            \"\n            class=\"p-invalid\">\n            {{ loginFormConstants.ERRORS.PASSWORD_REQUIRED }}\n          </small>\n        </div>\n        <p-button\n          [disabled]=\"loginButtonDisabled\"\n          class=\"p-offset-2 p-col-8\"\n          styleClass=\"login-button\"\n          label=\"{{ loginFormConstants.LABELS.LOGIN }}\"\n          type=\"submit\"\n          [icon]=\"loginButtonIcon\"\n          iconPos=\"right\">\n        </p-button>\n      </div>\n    </div>\n  </form>\n</p-card>\n","/**\n * Constant file for the authorization  component.\n */\nexport class AuthConstants {\n  /**\n   * Storage access token used during login process\n   */\n  public static readonly STORAGE_ACCESS_TOKEN = 'ACCESS_TOKEN';\n  /**\n   * Storage refresh token used during login process\n   */\n  public static readonly STORAGE_REFRESH_TOKEN = 'REFRESH_TOKEN';\n  /**\n   * Headers used in the login request\n   */\n  public static readonly HEADERS = {\n    TENANT_ID: 'X-TENANT-ID',\n    USERNAME: 'X-USERNAME',\n    PASSWORD: 'x-password',\n    FINGERPRINT: 'fingerprint',\n  };\n}\n","/* (ignored) */","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { Logger } from '../../interfaces/logger';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService implements Logger {\n  constructor() {}\n\n  /**\n   * Info level log\n   * @param value any\n   * @param rest any\n   */\n  info(value: any, ...rest: any[]): void {\n    if (!environment.production) {\n      console.log(value, rest);\n    }\n  }\n\n  /**\n   * Log level log\n   * @param value any\n   * @param rest any\n   */\n  log(value: any, ...rest: any[]): void {\n    if (!environment.production) {\n      console.log(value, rest);\n    }\n  }\n\n  /**\n   * Warning level log\n   * @param value any\n   * @param rest any\n   */\n  warn(value: any, ...rest: any[]): void {\n    if (!environment.production) {\n      console.warn(value, rest);\n    }\n  }\n\n  /**\n   * Error level log\n   * @param value any\n   * @param rest any\n   */\n  error(value: any, ...rest: any[]): void {\n    if (!environment.production) {\n      console.error(value, rest);\n    }\n  }\n}\n","import { ExceptionHandler } from '../../../interfaces/exception-handler';\nimport { LoggerService } from '../../logger/logger.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentErrorHandler implements ExceptionHandler {\n  constructor(public logger: LoggerService) {}\n\n  /**\n   * handle Component Error\n   * @param error Error\n   */\n  handle(error: Error): void {\n    this.logger.error(error.message);\n  }\n}\n","/**\n * Constant file for the error handler factory class.\n */\nexport class ErrorHandlerFactoryConstants {\n  public static readonly ERROR_MAPPINGS = {\n    ConnectionError: 'ConnectionError',\n    ComponentError: 'ComponentError',\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n\n})\nexport class InterceptorsModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Message } from 'primeng/api/message';\nimport { MessageService } from 'primeng/api';\nimport { RoomConfigFormConstants } from './room-config-form.constants';\nimport uuidv4 from 'uuid/dist/v4';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'room-config-form',\n  templateUrl: './room-config-form.component.html',\n  styleUrls: ['./room-config-form.component.scss'],\n  providers: [MessageService]\n})\nexport class RoomConfigFormComponent implements OnInit {\n  public roomConfigFormGroup: FormGroup;\n  public messages: Message[];\n  public formSubmitted = false;\n  public roomConfigFormConstants = RoomConfigFormConstants;\n  public roomId: string;\n  public mode: string;\n\n  constructor(\n    public router: Router,\n    private fb: FormBuilder,\n    public messageService: MessageService,\n    public config: DynamicDialogConfig,\n    public ref: DynamicDialogRef\n  ) {\n    this.mode = this.config.data.mode;\n  }\n\n  ngOnInit(): void {\n    if (localStorage.getItem('roomId')) {\n      this.roomId = localStorage.getItem('roomId');\n    } else {\n      this.roomId = uuidv4();\n      localStorage.setItem('roomId', this.roomId);\n    }\n    const storedConfig = JSON.parse(localStorage.getItem('roomConfig'));\n    this.roomConfigFormGroup = this.fb.group({\n      roomId: [this.roomId],\n      name: [storedConfig ? storedConfig.name : ''],\n      username: [storedConfig ? storedConfig.username : ''],\n      camera: [storedConfig ? storedConfig.camera : true],\n      microphone: [storedConfig ? storedConfig.microphone : true]\n    });    \n  }\n\n  /**\n   * Copy the room id in the clipboard\n   */\n  copyRoomId(): void {\n    navigator.clipboard\n      .writeText(this.roomId)\n      .then(() => console.log('copied'))\n      .catch((e) => console.error(e));\n  }\n\n  /**\n   * Submit the create room form\n   */\n  createRoom(): void {\n    console.log('createRoom');\n    // store all the room config in localStorage\n    localStorage.setItem('roomConfig', JSON.stringify(this.roomConfigFormGroup.value));\n    this.ref.close();\n    this.router.navigate([`/video-call/${this.roomId}`]);\n  }\n\n  /**\n   * Submit the join room form\n   */\n  joinRoom(): void {\n    console.log('joinRoom');\n    const storedConfig = JSON.parse(localStorage.getItem('roomConfig'));\n    localStorage.setItem('roomConfig', JSON.stringify({\n      roomId: this.roomConfigFormGroup.value.roomId,\n      name: storedConfig.name,\n      username: this.roomConfigFormGroup.value.username,\n      microphone: this.roomConfigFormGroup.value.microphone,\n      camera:  this.roomConfigFormGroup.value.camera,\n    }));    \n    this.ref.close();\n    this.router.navigate([`/video-call/${this.roomConfigFormGroup.value.roomId}`]);\n  }\n}\n","<form #roomConfigForm=\"ngForm\" (ngSubmit)=\"mode === 'create' ? createRoom()  : joinRoom()\"\n  [formGroup]=\"roomConfigFormGroup\" id=\"room-config-form\" class=\"room-config-form\" novalidate>\n  <div class=\"p-col-12\">\n    <div *ngIf=\"mode==='join'\" class=\"p-col-12 room-config-form-input-container\">\n      <label class=\"room-config-form-label\" for=\"room-id\">{{ roomConfigFormConstants.LABELS.ID }}</label>\n      <input class=\"input-padding\" formControlName=\"roomId\" id=\"room-id\" pInputText type=\"text\" />\n    </div>\n    <div *ngIf=\"mode==='create'\" class=\"p-col-12 room-config-form-input-container\">\n      <label class=\"room-config-form-label\" for=\"name\">{{ roomConfigFormConstants.LABELS.NAME }}</label>\n      <input class=\"input-padding\" formControlName=\"name\" id=\"room-name\" pInputText type=\"text\" />\n    </div>\n    <div class=\"p-col-12 room-config-form-input-container\">\n      <label class=\"room-config-form-label\" for=\"username\">{{ roomConfigFormConstants.LABELS.USERNAME }}</label>\n      <input class=\"input-padding\" formControlName=\"username\" id=\"room-username\" pInputText type=\"text\" />\n    </div>\n    <div class=\"p-col-12 room-config-form-input-container\">\n      <label class=\"room-config-form-label\" for=\"camera\"><img class=\"room-config-form-label-icon\"\n          src=\"assets/img/video-solid.svg\" /> {{ roomConfigFormConstants.LABELS.CAMERA }}</label>\n      <p-inputSwitch formControlName=\"camera\"></p-inputSwitch>\n      <label class=\"room-config-form-label\" for=\"microphone\"><img class=\"room-config-form-label-icon\"\n          src=\"assets/img/microphone-solid.svg\" /> {{ roomConfigFormConstants.LABELS.MICROPHONE }}</label>\n      <p-inputSwitch formControlName=\"microphone\"></p-inputSwitch>\n    </div>\n    <div *ngIf=\"mode==='create'\" class=\"p-col-12 room-config-form-input-container\">\n      <label class=\"room-config-form-label\" for=\"name\">{{ roomConfigFormConstants.LABELS.ID }}:\n      </label><span>{{roomId}}</span>\n      <button pButton pRipple type=\"button\" (click)=\"copyRoomId()\" icon=\"pi pi-copy\"\n        class=\"p-button-rounded p-button-outlined copy-button\" pTooltip=\"Copied!\" tooltipPosition=\"top\"\n        tooltipEvent=\"focus\">\n      </button>\n    </div>\n    <div *ngIf=\"mode==='create'\" class=\"p-offset-10\">\n      <p-button class=\"p-col-2\" styleClass=\"room-config-button\" label=\"{{ roomConfigFormConstants.LABELS.CREATE }}\"\n        type=\"submit\">\n      </p-button>\n    </div>\n    <div *ngIf=\"mode==='join'\" class=\"p-offset-10\">\n      <p-button class=\"p-col-2\" styleClass=\"room-config-button\" label=\"{{ roomConfigFormConstants.LABELS.JOIN }}\"\n        type=\"submit\">\n      </p-button>\n    </div>\n  </div>\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CoreUser } from '../../interfaces/core-user';\nimport { UserConstants } from './user.constants';\nimport { environment } from '../../../../environments/environment';\nimport { Response } from '../../interfaces/response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * getAllUsers\n   * @description Retrieve a list of users from coreuser service\n   * @returns  A Observable with an array of coreuser\n   */\n  public getAllUsers = (): Observable<Response<CoreUser>> => {\n    const httpOptions: object = {\n      headers: new HttpHeaders({\n        [UserConstants.HEADERS.TENANT_ID]: environment.tenantId,\n        [UserConstants.HEADERS.FINGERPRINT]: environment.fingerprint,\n      }),\n    };\n    const baseURL =\n      environment.https +\n      UserConstants.COREUSER_SERVICE +\n      environment.branch +\n      environment.serviceUrlDomain +\n      '/';\n    return this.httpClient.get<Response<CoreUser>>(\n      baseURL + UserConstants.USERS_ENDPOINT,\n      httpOptions\n    );\n  }\n\n  /**\n   * @param user CoreUser\n   */\n  public setActive(user: CoreUser): void {\n    const now = new Date().getTime();\n    const activationTime = new Date(user.user.activation_date).getTime();\n    const deactivationTime = new Date(user.user.deactivation_date).getTime();\n    user.user.active = activationTime < now\n      && (deactivationTime >= now || user.user.deactivation_date === null);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class PipesModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --cloud` replaces `environment.ts` with `environment.cloud.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serviceUrlDomain: '.dev.aareonit.fr',\n  tenantId: 'dev33sp2demo1_35ye7J9CJ5',\n  fingerprint: '0123456789',\n  branch: '-develop',\n  timeout: 30000,\n  // Generics\n  https: 'https://',\n  token_prefix: 'Bearer ',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ErrorHandlerFactoryConstants as Errors } from './error-handler-factory.constants';\nimport { ExceptionHandler } from '../../interfaces/exception-handler';\nimport { ConnectionErrorHandler } from './handlers/connection-error-handler';\nimport { ComponentErrorHandler } from './handlers/component-error-handler';\nimport { DefaultErrorHandler } from './handlers/default-error-handler';\nimport { LoggerService } from '../logger/logger.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerFactoryService {\n  constructor(public logger: LoggerService) {}\n\n  /**\n   * creates a new handler according to the received error\n   * @param error Error\n   */\n  createHandler(error: Error): ExceptionHandler {\n    let handler: ExceptionHandler;\n    const className: string = error.constructor.name;\n    switch (className) {\n      case Errors.ERROR_MAPPINGS.ConnectionError:\n        handler = new ConnectionErrorHandler(this.logger);\n        break;\n      case Errors.ERROR_MAPPINGS.ComponentError:\n        handler = new ComponentErrorHandler(this.logger);\n        break;\n      default:\n        handler = new DefaultErrorHandler(this.logger);\n    }\n\n    return handler;\n  }\n}\n","import { ExceptionHandler } from '../../../interfaces/exception-handler';\nimport { LoggerService } from '../../logger/logger.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConnectionErrorHandler implements ExceptionHandler {\n  constructor(public logger: LoggerService) {}\n\n  /**\n   * handle the Connection Error\n   * @param error Error\n   */\n  handle(error: Error): void {\n    this.logger.error('Error is: ' + error.message);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { UserService } from '../../services/user/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { StatusCodes } from 'http-status-codes';\nimport { CoreUser } from '../../interfaces/core-user';\nimport { Response } from '../../interfaces/response';\nimport { UserManagementTableConstants } from './user-management-table.constants';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'back-office-user-management-table',\n  templateUrl: './user-management-table.component.html',\n  styleUrls: ['./user-management-table.component.scss'],\n  providers: [MessageService],\n})\nexport class UserManagementTableComponent implements OnInit {\n\n  public users: CoreUser[];\n  public user: CoreUser;\n  public selectedUsers: CoreUser[];\n  public submitted: boolean;\n  public blockedTable: boolean;\n\n  constructor(\n    public userService: UserService,\n    public messageService: MessageService,\n    /*private confirmationService: ConfirmationService,*/\n    public router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.blockedTable = true;\n    const self: UserManagementTableComponent = this;\n    this.userService.getAllUsers().subscribe({\n      next(data: Response<CoreUser>): void {\n        self.users = data.results;\n        self.calculateActive();\n        self.blockedTable = false;\n      },\n      error(err: HttpErrorResponse): void {\n        self.messageService.add({\n          severity: 'error',\n          detail:\n            err.status === StatusCodes.UNAUTHORIZED\n              ? UserManagementTableConstants.ERRORS.INVALID_TOKEN\n              : UserManagementTableConstants.ERRORS.SERVER,\n        });\n        self.blockedTable = false;\n      },\n    });\n  }\n\n  /**\n   * sets active status on all users from table\n   */\n  calculateActive(): void {\n    this.users.forEach((user) => {\n      this.userService.setActive(user);\n    });\n  }\n\n  openNew(): void {\n  }\n\n  deleteSelectedUsers(): void {\n  }\n\n  editUser(user: CoreUser): void {\n  }\n\n  deleteUser(user: CoreUser): void {\n  }\n\n  hideDialog(): void {\n  }\n\n  saveUser(): void {\n  }\n}\n","<p-toast></p-toast>\n<div class=\"blockable-div\">\n  <p-table\n    #dt\n    [value]=\"users\"\n    [rows]=\"10\"\n    [paginator]=\"true\"\n    [globalFilterFields]=\"['user.user_name', 'user.role']\"\n    [(selection)]=\"selectedUsers\"\n    [rowHover]=\"true\"\n    dataKey=\"id\"\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n    [showCurrentPageReport]=\"true\"\n    styleClass=\"users-table\">\n    <ng-template pTemplate=\"caption\">\n      <div class=\"p-d-flex p-ai-center p-jc-between\">\n        <h5 class=\"p-m-0\">Manage Users</h5>\n        <span class=\"p-input-icon-left\">\n          <i class=\"pi pi-search\"></i>\n          <input\n            pInputText\n            type=\"text\"\n            (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n            placeholder=\"Search...\"/>\n        </span>\n      </div>\n    </ng-template>\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th style=\"width: 3rem\">\n          <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n        </th>\n        <th pSortableColumn=\"user.user_name\">\n          User Name <p-sortIcon field=\"name\"></p-sortIcon>\n        </th>\n        <th pSortableColumn=\"user.role\">\n          Role <p-sortIcon field=\"role\"></p-sortIcon>\n        </th>\n        <th pSortableColumn=\"user.activation_date\">\n          Activation date <p-sortIcon field=\"activationDate\"></p-sortIcon>\n        </th>\n        <th>\n          Active\n        </th>\n        <th></th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-user>\n      <tr>\n        <td>\n          <p-tableCheckbox [value]=\"user\"></p-tableCheckbox>\n        </td>\n        <td>{{ user.user.user_name }}</td>\n        <td>\n          {{ user.user.role === 'admin' ? 'Administrator' : 'Regular user' }}\n        </td>\n        <td>{{ user.user.activation_date }}</td>\n        <td><p-inputSwitch [(ngModel)]='user.user.active'></p-inputSwitch></td>\n        <td>\n          <button\n            pButton\n            icon=\"pi pi-pencil\"\n            class=\"p-button-rounded p-button-success p-mr-2\">\n          </button>\n          <button\n            pButton\n            icon=\"pi pi-trash\"\n            class=\"p-button-rounded p-button-warning\">\n          </button>\n        </td>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"summary\">\n      <div class=\"p-d-flex p-ai-center p-jc-between\">\n        In total there are {{ users ? users.length : 0 }} users.\n      </div>\n    </ng-template>\n  </p-table>\n  <p-blockUI [target]=\"dt\" [blocked]=\"blockedTable\">\n    <p-progressSpinner></p-progressSpinner>\n  </p-blockUI>\n</div>\n","import { ExceptionHandler } from '../../../interfaces/exception-handler';\nimport { LoggerService } from '../../logger/logger.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DefaultErrorHandler implements ExceptionHandler {\n  constructor(public logger: LoggerService) {}\n\n  /**\n   * handles default Error\n   * @param error Error\n   */\n  handle(error: Error): void {\n    this.logger.error(error.message);\n  }\n}\n","import { Component } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\n@Component({\n  selector: 'back-office-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss'],\n})\nexport class AdminComponent {\n  items: MenuItem[];\n\n  constructor() {}\n}\n","<div class=\"admin-layout\">\n  <back-office-admin-top-menu\n    [sideMenu]=\"sideMenu\">\n  </back-office-admin-top-menu>\n  <back-office-admin-side-menu\n    #sideMenu\n    [content]=\"content\">\n  </back-office-admin-side-menu>\n  <back-office-admin-content #content></back-office-admin-content>\n</div>\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { ExceptionHandler } from '../../interfaces/exception-handler';\nimport { ErrorHandlerFactoryService } from './error-handler-factory.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  public handler: ExceptionHandler;\n\n  constructor(public factory: ErrorHandlerFactoryService) {}\n\n  /**\n   * catches the error and handle it accordingly\n   * @param error Error\n   */\n  handleError(error: Error): void {\n    this.handler = this.factory.createHandler(error);\n    this.handler.handle(error);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToggleOverride } from '../../interfaces/toggle-override';\nimport { MenuItem } from 'primeng/api';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'back-office-admin-top-menu',\n  templateUrl: './admin-top-menu.component.html',\n  styleUrls: ['./admin-top-menu.component.scss']\n})\nexport class AdminTopMenuComponent implements OnInit {\n  items: MenuItem[];\n  @Input() sideMenu: ToggleOverride;\n\n  constructor(public authService: AuthService, public router: Router) {}\n\n  ngOnInit(): void {\n    this.items = [\n      {\n        label: 'Logout',\n        icon: 'pi pi-sign-out',\n        command: () => {\n          this.logout();\n        }\n      }\n    ];\n  }\n\n  /**\n   * toggle menu display from hamburger button\n   */\n  toggleMenu(event: Event): void {\n    this.sideMenu.toggleOverride();\n    event.stopPropagation();\n  }\n\n  /**\n   * Logs the user out and redirect to login page\n   */\n  logout(): void {\n    this.authService.logout();\n    this.router.navigateByUrl('/login');\n  }\n\n  /**\n   * VideoCall Functions POC\n   */\n\n  goToVideoCall(): void {\n    this.router.navigateByUrl('/video-call');\n  }\n}\n","<header class=\"backoffice-header p-col-12\">\n  <div class=\"p-grid\">\n    <div class=\"p-col-8 p-sm-6\">\n      <p-button (onClick)=\"toggleMenu($event)\" styleClass=\"toggle-menu p-button-sm\">\n        <i class=\"pi pi-bars\"></i>\n      </p-button>\n      <img src=\"assets/aareon_logo_inverted.svg\" />\n    </div>\n    <div class=\"p-col-4 p-sm-6 user-info\">\n      <p-button (click)=\"menu.toggle($event)\" styleClass=\"user-menu-button\"><span data-letters=\"JD\"></span>John Doe\n      </p-button>\n      <p-menu #menu [popup]=\"true\" [model]=\"items\" styleClass=\"user-menu\"></p-menu>\n    </div>\n  </div>\n</header>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EventsModule } from './events/events.module';\nimport { ServicesModule } from './services/services.module';\nimport { ComponentsModule } from './components/components.module';\nimport { PipesModule } from './pipes/pipes.module';\nimport { DirectivesModule } from './directives/directives.module';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { SliderModule } from 'primeng/slider';\nimport { MenuModule } from 'primeng/menu';\nimport { CardModule } from 'primeng/card';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { DividerModule } from 'primeng/divider';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { TooltipModule } from 'primeng/tooltip';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    EventsModule,\n    ServicesModule,\n    ComponentsModule,\n    PipesModule,\n    DirectivesModule,\n    ButtonModule,\n    InputTextModule,\n    SliderModule,\n    MenuModule,\n    CardModule,\n    MessagesModule,\n    MessageModule,\n    BlockUIModule,\n    ProgressSpinnerModule,\n    DividerModule,\n    DynamicDialogModule,\n    TooltipModule\n  ],\n  exports: [\n    ButtonModule,\n    DividerModule,\n    InputTextModule,\n    SliderModule,\n    MenuModule,\n    CardModule,\n    MessagesModule,\n    MessageModule,\n    BlockUIModule,\n    ProgressSpinnerModule,\n    DynamicDialogModule,\n    TooltipModule\n  ]\n})\nexport class SharedModule {}\n","/**\n * Constant file for the login form component.\n */\nexport class UserManagementTableConstants {\n  /**\n   * Object with all constants related the login errors\n   */\n  public static readonly ERRORS = {\n    INVALID_TOKEN: 'Your token is invalid. Please login you again',\n    SERVER:\n      'There was an error trying to process your request. Please, try again later',\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoginToken } from '../../../shared/models/login-token';\nimport { LoginForm } from '../../../shared/models/login-form';\nimport { AuthConstants } from './auth.constants';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * Process Sign in request\n   * @param loginForm the submitted login data\n   * @return Observable<LoginToken>\n   */\n  public signIn(loginForm: LoginForm): Observable<LoginToken> {\n    const httpOptions: object = {\n      headers: new HttpHeaders({\n        [AuthConstants.HEADERS.TENANT_ID]: environment.tenantId,\n        [AuthConstants.HEADERS.FINGERPRINT]: environment.fingerprint,\n        [AuthConstants.HEADERS.USERNAME]: loginForm.username,\n        [AuthConstants.HEADERS.PASSWORD]: loginForm.password,\n      }),\n    };\n    return this.httpClient.get<LoginToken>(\n      'https://auth-orm-develop.dev.aareonit.fr/api/authenticate',\n      httpOptions\n    );\n  }\n\n  /**\n   * Store access tokens on local storage\n   * @param token token to store\n   */\n  public storeCredential(token: LoginToken): void {\n    localStorage.setItem(AuthConstants.STORAGE_ACCESS_TOKEN, token.accessToken);\n    localStorage.setItem(\n      AuthConstants.STORAGE_REFRESH_TOKEN,\n      token.refreshToken\n    );\n  }\n\n  /**\n   * get credentials for use\n   * @return LoginToken\n   */\n  public getCredentials(): LoginToken {\n    return {\n      token: localStorage.getItem(AuthConstants.STORAGE_ACCESS_TOKEN),\n      accessToken: localStorage.getItem(AuthConstants.STORAGE_ACCESS_TOKEN),\n      refreshToken: localStorage.getItem(AuthConstants.STORAGE_REFRESH_TOKEN),\n    };\n  }\n\n  /**\n   * Verifies if the user is logged in\n   * @return boolean\n   */\n  public isLoggedIn(): boolean {\n    return (\n      localStorage.getItem(AuthConstants.STORAGE_ACCESS_TOKEN) !== null &&\n      localStorage.getItem(AuthConstants.STORAGE_REFRESH_TOKEN) !== null\n    );\n  }\n\n  /**\n   * Logs the user out\n   */\n  public logout(): void {\n    localStorage.removeItem(AuthConstants.STORAGE_ACCESS_TOKEN);\n    localStorage.removeItem(AuthConstants.STORAGE_REFRESH_TOKEN);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PrimeNGConfig } from 'primeng/api';\nimport 'reset-css';\n\n@Component({\n  selector: 'back-office-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  public title = 'back-office';\n  constructor(public primengConfig: PrimeNGConfig) {}\n\n  ngOnInit(): void {\n    this.primengConfig.ripple = true;\n  }\n}\n","<router-outlet></router-outlet>\n","/**\n * Constant file for the authorization  component.\n */\nexport class AdminSideMenuConstants {\n  /**\n   * Storage maximum size for tablet viewport\n   */\n  public static readonly TABLET_BREAKPOINT = 992;\n\n  /**\n   * Storage maximum size for mobile viewport\n   */\n  public static readonly MOBILE_BREAKPOINT = 768;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class ComponentsModule {}\n","import { Component } from '@angular/core';\nimport { ContentPaddingOverride } from '../../interfaces/content-padding-override';\n\n@Component({\n  selector: 'back-office-admin-content',\n  templateUrl: './admin-content.component.html',\n  styleUrls: ['./admin-content.component.scss'],\n})\nexport class AdminContentComponent implements ContentPaddingOverride {\n  public contentOverride = '';\n\n  /**\n   * forces padding to tablet size\n   */\n  overridePadding(): void {\n    this.contentOverride = 'content-override';\n  }\n\n  /**\n   * clear padding correction\n   */\n  clearOverride(): void {\n    this.contentOverride = '';\n  }\n}\n","<main>\n  <div class=\"content {{ contentOverride }}\">\n    <div class=\"content-inside\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n  <!-- <back-office-admin-footer></back-office-admin-footer> -->\n</main>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class EventsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class ServicesModule {}\n","// Vendors\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SocketIoModule } from 'ngx-socket-io';\n\n// Bootstrapping angular application dependencies\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PagesModule } from './pages/pages.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthHeaderInterceptor } from './core/interceptors/auth-header/auth-header.interceptor';\nimport { ErrorHandlerFactoryService } from './core/services/error-handler/error-handler-factory.service';\nimport { ErrorHandlerService } from './core/services/error-handler/error-handler.service';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    PagesModule,\n    CoreModule,\n    SharedModule,\n    SocketIoModule.forRoot({\n      url: 'https://test-app-io.herokuapp.com'\n    }),\n  ],\n  providers: [\n    ErrorHandlerFactoryService,\n    { provide: ErrorHandler, useClass: ErrorHandlerService },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthHeaderInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","/**\n * Constant file for the auth header interceptor.\n */\nexport class AuthHeaderConstants {\n  /**\n   * Object with all constants related the login\n   */\n  public static readonly HEADERS = {\n    AUTHORIZATION: 'Authorization'\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagesRoutingModule } from './pages-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule, \n    PagesRoutingModule\n  ]\n})\nexport class PagesModule {}\n","/**\n * Constant file for the login form component.\n */\nexport class LoginFormConstants {\n  /**\n   * Object with all constants related the login\n   */\n  public static readonly LABELS = {\n    BACKOFFICE: 'Backoffice',\n    USERNAME: 'Username',\n    PASSWORD: 'Password',\n    LOGIN: 'LOGIN',\n  };\n  /**\n   * Object with all constants related the login errors\n   */\n  public static readonly ERRORS = {\n    USERNAME_REQUIRED: 'Please, enter your username',\n    USERNAME_EMAIL: 'Please, enter a valid email',\n    PASSWORD_REQUIRED: 'Please, enter your password',\n    INVALID_CREDENTIALS: 'Sorry, the username or password are invalid',\n    SERVER:\n      'There was an error trying to process your request. Please, try again later',\n  };\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BackOfficeGuard implements CanActivate {\n  constructor(public authService: AuthService, public router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n\n    return this.router.createUrlTree(['/login']);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'back-office-admin-footer',\n  templateUrl: './admin-footer.component.html',\n  styleUrls: ['./admin-footer.component.scss'],\n})\nexport class AdminFooterComponent {\n  constructor() {}\n}\n","<footer class=\"backoffice-footer p-grid p-nogutter\">\n  <div class=\"p-col-12\"><h5>Aareon Product</h5></div>\n</footer>\n","/**\n * Constant file for the room configuration form component.\n */\nexport class RoomConfigFormConstants {\n  /**\n   * Object with all constants related the room configuration\n   */\n  public static readonly LABELS = {\n    CAMERA: 'Camera',\n    CANCEL: 'Cancel',\n    CREATE:' Create',\n    ID: 'Room ID',\n    JOIN: 'Join',\n    MICROPHONE: 'Microphone',\n    NAME: 'Room name (Optional)',\n    USERNAME: 'Your name (Optional)'\n  };\n  /**\n   * Object with all constants related the room configuration errors\n   */\n  public static readonly ERRORS = {\n    \n    SERVER:\n      'There was an error trying to process your request. Please, try again later',\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin/admin.component';\nimport { RouterModule } from '@angular/router';\nimport { AdminTopMenuComponent } from './admin-top-menu/admin-top-menu.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AdminSideMenuComponent } from './admin-side-menu/admin-side-menu.component';\nimport { AdminFooterComponent } from './admin-footer/admin-footer.component';\nimport { ClickOutsideModule } from 'ng-click-outside';\nimport { AdminContentComponent } from './admin-content/admin-content.component';\n\n@NgModule({\n  declarations: [\n    AdminComponent,\n    AdminTopMenuComponent,\n    AdminSideMenuComponent,\n    AdminFooterComponent,\n    AdminContentComponent,\n  ],\n  imports: [CommonModule, RouterModule, SharedModule, ClickOutsideModule],\n})\nexport class LayoutModule {}\n","// Vendors\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Layout dependencies\nimport { LayoutModule } from './layout/layout.module';\nimport { ComponentsModule } from './components/components.module';\nimport { GuardsModule } from './guards/guards.module';\nimport { InterceptorsModule } from './interceptors/interceptors.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    ComponentsModule,\n    GuardsModule,\n    InterceptorsModule,\n  ],\n})\nexport class CoreModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RoomConfigFormComponent } from './room-config-form/room-config-form.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { UserManagementTableComponent } from './user-management-table/user-management-table.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { CalendarModule } from 'primeng/calendar';\nimport { SliderModule } from 'primeng/slider';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { RatingModule } from 'primeng/rating';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { DividerModule } from 'primeng/divider';\nimport { TooltipModule } from 'primeng/tooltip';\n\n\n@NgModule({\n  declarations: [LoginFormComponent, RoomConfigFormComponent, UserManagementTableComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TableModule,\n    CalendarModule,\n    SliderModule,\n    DialogModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    DropdownModule,\n    ButtonModule,\n    ToastModule,\n    InputTextModule,\n    ProgressBarModule,\n    HttpClientModule,\n    FileUploadModule,\n    ToolbarModule,\n    RatingModule,\n    FormsModule,\n    RadioButtonModule,\n    InputNumberModule,\n    ConfirmDialogModule,\n    InputTextareaModule,\n    InputSwitchModule,\n    DividerModule,\n    TooltipModule\n  ],\n  exports: [LoginFormComponent, RoomConfigFormComponent, UserManagementTableComponent]\n})\nexport class ComponentsModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BackOfficeGuard } from '../core/guards/back-office.guard';\nimport { AdminComponent } from '../core/layout/admin/admin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent,\n    children: [\n      {\n        path: 'overview',\n        loadChildren: () =>\n          import('./overview/overview.module').then((m) => m.OverviewModule),\n        canActivate: [BackOfficeGuard]\n      },\n      {\n        path: 'user-management',\n        loadChildren: () =>\n          import('./user-management/user-management.module').then(\n            (m) => m.UserManagementModule\n          ),\n        canActivate: [BackOfficeGuard]\n      },\n      {\n        path: 'video-call',\n        loadChildren: () =>\n          import('./videocall/videocall.module').then((m) => m.VideoCallModule),\n        canActivate: [BackOfficeGuard]\n      },\n      {\n        path: 'video-call/:roomId',\n        loadChildren: () =>\n          import('./videocall-room/videocallroom.module').then((m) => m.VideoCallRoomModule),\n        canActivate: [BackOfficeGuard]\n      }\n    ]\n  },\n  {\n    path: 'login',\n    loadChildren: () =>\n      import('./login/login.module').then((m) => m.LoginModule)\n  },\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [BackOfficeGuard]\n})\nexport class PagesRoutingModule {}\n","/**\n * Constant file for the user  component.\n */\nexport class UserConstants {\n  /**\n   * Endpoint that retrieve the user list\n   */\n  public static readonly USERS_ENDPOINT = 'api/v1/users';\n\n  /**\n   * Service name\n   */\n  public static readonly COREUSER_SERVICE = 'coreuser-orm';\n\n  /**\n   * Headers used in the login request\n   */\n  public static readonly HEADERS = {\n    TENANT_ID: 'X-TENANT-ID',\n    FINGERPRINT: 'fingerprint',\n  };\n}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { ToggleOverride } from '../../interfaces/toggle-override';\nimport { AdminSideMenuConstants } from './admin-side-menu.constants';\nimport { ContentPaddingOverride } from '../../interfaces/content-padding-override';\n\n@Component({\n  selector: 'back-office-admin-side-menu',\n  templateUrl: './admin-side-menu.component.html',\n  styleUrls: ['./admin-side-menu.component.scss'],\n})\nexport class AdminSideMenuComponent implements OnInit, ToggleOverride {\n  @Input() content: ContentPaddingOverride;\n  public items: MenuItem[];\n  public override = false;\n  public sideMenuOverride = '';\n  public pMenuOverride = '';\n  public chevronDirection: string;\n  public collapseButtonLabel: string;\n  public width: number;\n\n  constructor(private eRef: ElementRef) {\n    this.width = window.innerWidth;\n  }\n\n  ngOnInit(): void {\n    this.items = [\n      {\n        label: 'Overview',\n        icon: 'pi pi-home',\n        routerLink: '/overview',\n        title: 'Overview',\n        command: () => {\n          this.clearOverride();\n        },\n      },\n      /*{\n        label: 'User Management',\n        icon: 'pi pi-users',\n        routerLink: '/user-management',\n        title: 'User Management',\n        command: () => {\n          this.clearOverride();\n        },\n      },*/\n      {\n        label: 'Video Call',\n        icon: 'pi pi-video',\n        routerLink: '/video-call',\n        title: 'Video Call',\n        command: () => {\n          this.clearOverride();\n        },\n      },\n    ];\n\n    this.setChevronDirection();\n  }\n\n  /**\n   * adjust overriding according to resize situation\n   * @param event event dispatched when viewport changes its size\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event): void {\n    this.width = window.innerWidth;\n    this.clearOverride();\n  }\n\n  /**\n   * if theres a click outside the component and viewport is small, collapse the menu\n   * @param event event dispatched on click\n   */\n  clickOut(event: Event): void {\n    this.clearOverride();\n  }\n\n  /**\n   * Overrides the natural (extended or collapsed) behavior\n   */\n  toggleOverride(): void {\n    if (\n      this.width > AdminSideMenuConstants.TABLET_BREAKPOINT &&\n      this.override === false\n    ) {\n      this.sideMenuOverride = 'side-menu-override-collapse';\n      this.pMenuOverride =\n        'p-menu-override-collapse p-menuitem-text-override-collapse';\n      this.content.overridePadding();\n    } else if (this.override === false) {\n      this.sideMenuOverride = 'side-menu-override-expand';\n      this.pMenuOverride =\n        'p-menu-override-expand p-menuitem-text-override-expand';\n    } else {\n      this.sideMenuOverride = '';\n      this.pMenuOverride = '';\n      this.content.clearOverride();\n    }\n\n    this.override = !this.override;\n    this.setChevronDirection();\n  }\n\n  /**\n   * collapses the menu on small viewports\n   */\n  clearOverride(): void {\n    if (this.width <= AdminSideMenuConstants.TABLET_BREAKPOINT) {\n      this.sideMenuOverride = '';\n      this.pMenuOverride = '';\n      this.override = false;\n      this.content.clearOverride();\n    }\n\n    this.setChevronDirection();\n  }\n\n  /**\n   * Sets the icon direction depending on viewport and override state\n   */\n  setChevronDirection(): void {\n    this.chevronDirection = 'left';\n\n    if (\n      this.isBigViewportAndOverride() ||\n      this.isSmallViewportAndNotOverride()\n    ) {\n      this.chevronDirection = 'right';\n    }\n\n    this.setCollapseMenuLabel();\n  }\n\n  /**\n   * Sets the  label depending on viewport and override state\n   */\n  setCollapseMenuLabel(): void {\n    this.collapseButtonLabel = '';\n\n    if (\n      this.isBigViewportAndNotOverride() ||\n      this.isSmallViewportAndOverride()\n    ) {\n      this.collapseButtonLabel = 'Collapse Menu';\n    }\n  }\n\n  /**\n   * Viewport size is big and menu is collapsed?\n   */\n  isBigViewportAndOverride(): boolean {\n    return (\n      this.width > AdminSideMenuConstants.TABLET_BREAKPOINT &&\n      this.override === true\n    );\n  }\n\n  /**\n   * Viewport size is big and menu is expanded?\n   */\n  isBigViewportAndNotOverride(): boolean {\n    return (\n      this.width > AdminSideMenuConstants.TABLET_BREAKPOINT &&\n      this.override === false\n    );\n  }\n\n  /**\n   * Viewport size is tablet/mobile and menu is expanded?\n   */\n  isSmallViewportAndOverride(): boolean {\n    return (\n      this.width <= AdminSideMenuConstants.TABLET_BREAKPOINT &&\n      this.override === true\n    );\n  }\n\n  /**\n   * Viewport size is tablet/mobile and menu is collapsed?\n   */\n  isSmallViewportAndNotOverride(): boolean {\n    return (\n      this.width <= AdminSideMenuConstants.TABLET_BREAKPOINT &&\n      this.override === false\n    );\n  }\n}\n","<aside\n  (clickOutside)=\"clickOut($event)\"\n  class=\"backoffice-side-menu p-col-fixed {{ sideMenuOverride }}\"\n>\n  <p-menu [model]=\"items\" styleClass=\"{{ pMenuOverride }}\"></p-menu>\n  <p-button\n    (onClick)=\"toggleOverride()\"\n    styleClass=\"toggle-collapse p-button-sm\"\n    label=\"{{ collapseButtonLabel }}\"\n    icon=\"pi pi-chevron-{{ chevronDirection }}\"\n    iconPos=\"left\">\n  </p-button>\n</aside>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class GuardsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n})\nexport class DirectivesModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}